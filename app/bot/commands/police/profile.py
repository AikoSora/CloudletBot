from time import time
from json import dumps
from app.bot import handler
from random import randint as random
from app.models import Account, Police, PoliceCommands, Other
from app.bot.Message import Message

keyboard_profile = (
                        {"name": "‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏", "command": "settings", "color": "secondary"},
                        {"name": "üëë –¢–æ–ø", "color": "secondary"}
                    )
keyboard_settings = (
                        {"name": "üìã –ì–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞", "command": "hyperlink", "color": "secondary"},
                        {"name": "üì∞ –†–∞—Å—Å—ã–ª–∫–∞", "command": "mention", "color": "secondary"}
                    )

async def profile(msg: Message, user: Account, callback: bool = False):
    luck = None
    name = None
    if user.botnet_id != 0:
        luck = PoliceCommands.objects.get(id=user.botnet_id)
        name = luck.command_name
        luck = len(luck.users.replace(".", " ").strip().split())
    police = Police.objects.get(user=user)
    text = f"{user()} –ø—Ä–æ—Ñ–∏–ª—å:"
    text += '\nüí¥ –ë–∞–ª–∞–Ω—Å: {} $'.format(int(user.balance))
    text += f"\nüí∑ –ë–∞–ª–ª—ã: {user.donate_points}"
    text += f'\nüîê –°–æ–≤–µ—Ä—à–µ–Ω–æ –∞—Ä–µ—Å—Ç–æ–≤: {police.arrest_rating}'
    text += f'\nüëë –†–µ–π—Ç–∏–Ω–≥: {police.arrest_count}'
    text += f'\n‚òò –£–¥–∞—á–∞: {(police.transport + police.equipment) + (0 if int(time()) >= user.buffs_one_time else 10)} —É—Ä. ' + (f"(+{luck} - {name})" if user.botnet_id != 0 else "")
    text += f'\nüéÅ –ü–æ–ª—É—á–µ–Ω–æ: {user.holiday_temp} {user.decline(user.holiday_temp, ["–ø–æ–¥–∞—Ä–æ–∫", "–ø–æ–¥–∞—Ä–∫–∞", "–ø–æ–¥–∞—Ä–∫–æ–≤"])}'
    text += f'\n\nüìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {user.reg_date}'
    
    msg.inline_buttons(keyboard_profile)

    if callback:
        await msg.edit(text)
    else:
        await msg(text)

async def settings(msg: Message, user: Account, callback: bool = False):
    text = f'{user()} –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:'
    text += f'\nüìã –ì–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞: {"–≤–∫–ª" if user.hyperlink else "–≤—ã–∫–ª"}'
    text += f'\nüì∞ –†–∞—Å—Å—ã–ª–∫–∞: {"–≤–∫–ª" if user.mention else "–≤—ã–∫–ª"}'
    
    msg.inline_buttons(keyboard_settings)

    if callback:
        msg.inline_buttons({"name": "üîô –ù–∞–∑–∞–¥", "command": "profile", "color": "secondary"})
        await msg.edit(text)
    else:
        await msg(text)

async def hyperlink(msg: Message, user: Account, callback: bool = False):
    if user.hyperlink:
        user.hyperlink = False
        user.save()
        text = f"{user()} –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞ {user.emoji()}"
    elif not user.hyperlink:
        user.hyperlink = True
        user.save()
        text = f"{user()} –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞ {user.emoji()}"

    if callback:
        msg.inline_buttons({"name": "üîô –ù–∞–∑–∞–¥", "command": "settings", "color": "secondary"})
        await msg.edit(text)
    else:
        await msg(text)

async def mention(msg: Message, user: Account, callback: bool = False):
    if user.mention:
        user.mention = False
        user.save()
        text = f"{user()} –≤—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ {user.emoji()}"
    elif not user.mention:
        user.mention = True
        user.save()
        text = f"{user()} –≤—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É {user.emoji()}"

    if callback:
        msg.inline_buttons({"name": "üîô –ù–∞–∑–∞–¥", "command": "settings", "color": "secondary"})
        await msg.edit(text)
    else:
        await msg(text)

# PROFILE
@handler.message(name = ['–ø—Ä–æ—Ñ–∏–ª—å','–ø—Ä–æ—Ñ','—Å—Ç–∞—Ç–∞', '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'], dialog = Account.Dialog.POLICE)
async def _(msg: Message, user: Account):
    await profile(msg, user)

@handler.callback(name="profile", dialog=Account.Dialog.POLICE)
async def _(msg: Message, user: Account):
    await profile(msg, user, True)

@handler.payload(name="profile", dialog=Account.Dialog.POLICE)
async def _(msg: Message, user: Account):
    await profile(msg, user)

# SETTINGS
@handler.callback(name="settings", dialog=Account.Dialog.POLICE)
async def _(msg: Message, user: Account):
    await settings(msg, user, True)

@handler.payload(name="settings", dialog=Account.Dialog.POLICE)
async def _(msg: Message, user: Account):
    await settings(msg, user)

@handler.message(name = '–Ω–∞—Å—Ç—Ä–æ–π–∫–∏', dialog = Account.Dialog.POLICE)
async def _(msg: Message, user: Account):
    await settings(msg, user)

# HYPERLINK
@handler.message(name = '–≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞', dialog = Account.Dialog.POLICE)
async def _(msg: Message, user: Account):
    await hyperlink(msg, user)

@handler.callback(name="hyperlink", dialog=Account.Dialog.POLICE)
async def _(msg: Message, user: Account):
    await hyperlink(msg, user, True)

@handler.payload(name="hyperlink", dialog=Account.Dialog.POLICE)
async def _(msg: Message, user: Account):
    await hyperlink(msg, user)

# MENTION
@handler.message(name = '—Ä–∞—Å—Å—ã–ª–∫–∞', dialog = Account.Dialog.POLICE)
async def _(msg: Message, user: Account):
    await mention(msg, user)

@handler.callback(name="mention", dialog=Account.Dialog.POLICE)
async def _(msg: Message, user: Account):
    await mention(msg, user, True)

@handler.payload(name="mention", dialog=Account.Dialog.POLICE)
async def _(msg: Message, user: Account):
    await mention(msg, user)
