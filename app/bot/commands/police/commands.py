from decimal import Decimal
from app.bot import handler
from random import randint as random
from app.models import Account, Police, PoliceCommands


keyboard_default = (
						{"name": "‚öô –†–∞–±–æ—Ç–∞—Ç—å", "color": "negative"},
						{"name": "üë• –ö–æ–º–∞–Ω–¥–∞", "color": "primary"},
					)

keyboard_default_two = (
						{"name": "üõí –ú–∞–≥–∞–∑–∏–Ω", "color": "positive"}, 
						{"name": "üìã –ü—Ä–æ—Ñ–∏–ª—å", "color": "secondary"}, 
						{"name": "üìö –ü–æ–º–æ—â—å", "color": "positive"}
					)

keyboard_create_or_cancel = (
								{'name': "–°–æ–∑–¥–∞—Ç—å", "color": "positive"},
								{'name': "–û—Ç–º–µ–Ω–∞", "color": "negative"}
							)
def helpPC(user):
	text = f"{user()} –ø–æ–º–æ—â—å:"
	text += f"\nüë• –ö–æ–º–∞–Ω–¥–∞ —Å–æ–∑–¥–∞—Ç—å <–ù–∞–∑–≤–∞–Ω–∏–µ> - —Å–æ–∑–¥–∞—Ç—å –∫–æ–º–∞–Ω–¥—É"
	text += f'\nüì≤ –ö–æ–º–∞–Ω–¥–∞ –≤—Å—Ç—É–ø–∏—Ç—å <ID> <–ü–∞—Ä–æ–ª—å> - –≤—Å—Ç—É–ø–∏—Ç—å –≤ –∫–æ–º–∞–Ω–¥—É'
	text += f"\nüìö –ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â—å - –ø–æ–º–æ—â—å"
	text += f"\n\nüí° –ö–æ–º–∞–Ω–¥–∞ –ø–æ–≤—ã—à–∞–µ—Ç –≤–∞—à—É —É–¥–∞—á—É {user.emoji()}"
	return text

@handler.message(name='–∫–æ–º–∞–Ω–¥–∞', dialog = Account.Dialog.POLICE, with_args=True)
async def _(msg, user):
	keyboard = 'keyboard_default'
	if len(msg.path_args) >= 3:
		if msg.path_args[1] == "—Å–æ–∑–¥–∞—Ç—å":
			if len(msg.event['object']['message']['text'][15:].strip()) <= 10:
				if user.botnet_id == 0:
					police_luck = Police.objects.get(user=user)
					police_money = 500 * (police_luck.equipment + police_luck.transport)
					user.dialog = Account.Dialog.CREATE_PC
					user.temp = f"{msg.event['object']['message']['text'][15:].replace(',', '').strip()},{police_money}"
					temp = user.temp.strip().split(",")
					text = f"{user()} –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
					text += f"\nüìã –ù–∞–∑–≤–∞–Ω–∏–µ: {temp[0]}"
					text += f'\nüí≥ –°—Ç–æ–∏–º–æ—Å—Ç—å: {user.digit_number(int(temp[1]))}$'
					text += f"\nüí° –°–æ–∑–¥–∞—Ç—å –∫–æ–º–∞–Ω–¥—É? üôÉ"
					keyboard = 'keyboard_create_or_cancel'
				else:
					text = f"{user()} –í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–æ–º–∞–Ω–¥–µ {user.emoji_bad()}"
			else:
				text = f"{user()} –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 10 —Å–∏–º–≤–æ–ª–æ–≤ {user.emoji_bad()}"
		elif msg.path_args[1] == "–≤—Å—Ç—É–ø–∏—Ç—å":
			if len(msg.path_args) >= 4:
				command = msg.path_args[2]
				try:
					if user.botnet_id == 0:
						command = PoliceCommands.objects.get(id = int(msg.path_args[2]))
						if msg.path_args[3] == str(command.password):
							users = command.users.replace(".", " ").strip().split()
							if len(users) < 5:
								users.append(f"{user.id}")
								command.users = ".".join(users)
								user.botnet_id = command.id
								command.save()
								text = f"{user()} –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–µ–Ω–∏–ª–∏—Å—å –∫ –∫–æ–º–∞–Ω–¥–µ {user.emoji()}"
							else:
								text = f"{user()} –í –∫–æ–º–∞–Ω–¥–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –º–µ—Å—Ç–∞ {user.emoji_bad()}"
						else:
							text = f"{user()} –ü–∞—Ä–æ–ª—å –Ω–µ –≤–µ—Ä–Ω—ã–π {user.emoji_bad()}"
					else:
						text = f"{user()} –í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–æ–º–∞–Ω–¥–µ {user.emoji_bad()}"
				except:
					text = f"{user()} –ö–æ–º–∞–Ω–¥–∞ —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ {user.emoji_bad()}"
			else:
				text = f"{user()} –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –ö–æ–º–∞–Ω–¥–∞ –≤—Å—Ç—É–ø–∏—Ç—å <ID> <–ü–∞—Ä–æ–ª—å>"
		else:
			text = helpPC(user)
	elif len(msg.path_args) == 2:
		if msg.path_args[1] == "–ø–æ–º–æ—â—å":
			text = helpPC(user)
		else:
			text = helpPC(user)
	else:
		if user.botnet_id == 0:
			text = helpPC(user)
		else:
			command = PoliceCommands.objects.get(id=user.botnet_id)
			count = len(command.users.replace(".", " ").strip().split())
			text = f"{user()} –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
			text += f"\nüÜî ID –ö–æ–º–∞–Ω–¥—ã: {command.id}"
			text += f"\nüìã –ù–∞–∑–≤–∞–Ω–∏–µ: {command.command_name}"
			text += f"\nüë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {count}/5"
			text += f"\n‚òò –£–¥–∞—á–∞: +{count}"
			text += f"\n\nüí° –ü–∞—Ä–æ–ª—å –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è: {command.password}"

	user.save()

	if keyboard == "keyboard_default":
		msg.buttons(keyboard_default)
		msg.buttons(keyboard_default_two)
	elif keyboard == "keyboard_create_or_cancel":
		msg.buttons(keyboard_create_or_cancel)

	await msg(text)

@handler.message(name = '—Å–æ–∑–¥–∞—Ç—å', dialog = Account.Dialog.CREATE_PC)
async def _(msg, user):
	temp = user.temp.strip().split(",")
	user.temp = ""
	user.dialog = Account.Dialog.POLICE
	if user.balance - int(temp[1]) >= 0:
		user.balance -= Decimal(int(temp[1]))
		command = PoliceCommands.objects.create(command_name = temp[0], users=f"{user.id}", password=f"{user.user_id}", id=(PoliceCommands.objects.count()+1))
		user.botnet_id = command.id
		text = f"{user()} –ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ {user.emoji()}"
	else:
		text = f"{user()} –£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ {user.emoji_bad()}"
	user.save()

	msg.buttons(keyboard_default)
	msg.buttons(keyboard_default_two)
	await msg(text)


@handler.message(name = '–æ—Ç–º–µ–Ω–∞', dialog = Account.Dialog.CREATE_PC)
async def _(msg, user):
	user.temp = ""
	user.dialog = Account.Dialog.POLICE
	user.save()
	msg.buttons(keyboard_default)
	msg.buttons(keyboard_default_two)
	await msg(f"{user()} –≤–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üöÄ")