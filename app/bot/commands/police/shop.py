from app.bot import handler
from decimal import Decimal
from random import randint as random
from app.models import Account, Police

@handler.message(name = '–º–∞–≥–∞–∑–∏–Ω', dialog = Account.Dialog.POLICE)
async def _(msg, user):
    equipment = user.police.get(user=user).equipment 
    transport = user.police.get(user=user).transport 
    text = f'{user()} —É–ª—É—á—à–µ–Ω–∏—è:\n'
    text += f'\nüöì –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç: \n&#12288;‚≠ê –£—Ä–æ–≤–µ–Ω—å {transport}' + (f'\n&#12288;üí≥ –°—Ç–æ–∏–º–æ—Å—Ç—å: {user.digit_number(6000 * transport)} $\n' if transport != 30 else "\n&#12288;üí° –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —É–ª—É—á—à–µ–Ω.\n")
    text += f'\nüíª –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ:\n&#12288;‚≠ê –£—Ä–æ–≤–µ–Ω—å {equipment}' + (f'\n&#12288;üí≥ –°—Ç–æ–∏–º–æ—Å—Ç—å: {user.digit_number(3000 * equipment)} $\n' if equipment != 30 else "\n&#12288;üí° –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —É–ª—É—á—à–µ–Ω–æ.\n")
    text += f"\nüí≥ –ë–∞–ª–∞–Ω—Å: {user.digit_number(int(user.balance))} $"
    text += f'\n\nüí° –£–ª—É—á—à–∞—è –¥–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã, –≤—ã —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç–µ —Å–≤–æ—é —É–¥–∞—á—É –∏ –∑–∞—Ä–∞–±–æ—Ç–æ–∫ {user.emoji()}'

    keyboard = []
    if transport + equipment != 60:
        if transport != 30:
            keyboard.append({"name": "üöì –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç"})
        if equipment != 30:
            keyboard.append({"name": "üíª –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ"})

    if len(keyboard) > 0:
        msg.inline_buttons(keyboard)

    msg.inline_buttons({"name": "‚≠ê –£—Å–∏–ª–µ–Ω–∏—è"})

    await msg(text)

@handler.message(name = '—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç', dialog = Account.Dialog.POLICE)
async def _(msg, user):
    transport = user.police.get(user=user).transport 
    text = f'{user()} '
    if transport != 30:
        if user.balance - (6000 * transport) >= 0:
            Police.objects.filter(user=user).update(transport = transport + 1)
            Police.objects.filter(user=user).update(income_arrest = user.police.get(user=user).income_arrest + 1)
            user.balance -= Decimal(6000 * transport)
            user.save()
            text += f'–≤—ã —É—Å–ø–µ—à–Ω–æ —É–ª—É—á—à–∏–ª–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –¥–æ {user.police.get(user=user).transport} —É—Ä–æ–≤–Ω—è {user.emoji()}'
        else:
            text += f'—É –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ {user.emoji_bad()}'
    else:
        text += f'–≤–∞—à —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —É–ª—É—á—à–µ–Ω {user.emoji_bad()}'

    await msg(text)

@handler.message(name = '–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ', dialog = Account.Dialog.POLICE)
async def _(msg, user):
    equipment = user.police.get(user=user).equipment
    text = f'{user()} '
    if equipment != 30:
        if user.balance - (3000 * equipment) >= 0:
            Police.objects.filter(user=user).update(equipment = equipment + 1)
            Police.objects.filter(user=user).update(income_arrest = user.police.get(user=user).income_arrest + 1)
            user.balance -= Decimal(3000 * equipment)
            user.save()
            text += f'–≤—ã —É—Å–ø–µ—à–Ω–æ —É–ª—É—á—à–∏–ª–∏ —Å–≤–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–æ {user.police.get(user=user).equipment} —É—Ä–æ–≤–Ω—è {user.emoji()}'
        else:
            text += f'—É –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ {user.emoji_bad()}'
    else:
        text += f'–≤–∞—à–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —É–ª—É—á—à–µ–Ω–æ {user.emoji_bad()}'

    await msg(text)