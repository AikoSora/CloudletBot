from decimal import Decimal
from app.bot import handler
from random import randint as random
from time import time, strftime, localtime
from app.models import Account, Police, WorkForPolice as WFP, Other


@handler.message(name = '—Ä–∞–±–æ—Ç–∞—Ç—å', dialog = Account.Dialog.POLICE)
async def _(msg, user):
    text = f"{user()} "
    police = Police.objects.get(user=user)
    if time() >= police.work_time:
        count = WFP.objects.count()
        work = WFP.objects.get(id=random(1, count)).text
        money = random(100, 1000) * ((police.equipment + police.transport) + (0 if int(time()) >= user.buffs_two_time else 10))
        text += f'{work}\n–°–µ–≥–æ–¥–Ω—è –≤—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏: {user.digit_number(money)} $ {user.emoji()}'
        if Other.objects.get(id=1).holiday:
            holiday_gift = random(0, 1)
            if holiday_gift == 1:
                gift_count = random(1, 10)
                user.holiday_temp += gift_count
                text += f"\n–ü–æ–ª—É—á–µ–Ω–æ {gift_count} {user.decline(gift_count, ['–ø–æ–¥–∞—Ä–æ–∫', '–ø–æ–¥–∞—Ä–∫–∞', '–ø–æ–¥–∞—Ä–∫–æ–≤'])} üéÅ"
        police.work_time = time() + 300
        user.balance += Decimal(money)
        police.save()
        user.save()
        sticker = 20467
    else:
        text += f"–≤—ã —Å–ª–∏—à–∫–æ–º —É—Å—Ç–∞–ª–∏ {user.emoji_bad()}\n–°–ª–µ–¥—É—é—â–∞—è –ø–æ–ø—ã—Ç–∫–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ —á–µ—Ä–µ–∑ {str(strftime('%M –º–∏–Ω.', localtime(police.work_time - time()))).replace('0', '') if police.work_time - time() > 60 else '–Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥'}."
        sticker = 20463

    await msg(text)
    await msg(sticker_id = sticker)
